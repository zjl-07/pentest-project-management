import { all, takeLatest, call, put } from "redux-saga/effects";
import actionTypes from "./user.actionTypes";
import {
  fetchUsersSuccess,
  fetchUsersFailure,
  loginSuccess,
  loginFailure
} from "./user.action";
import API from "API/jsonServer";
import { toast } from "react-toastify";

const fetchFromAPI = () => API.get("/users");

// TODO: Refactoring "users" to "/users/login"
const loginFromAPI = data => API.post("users/login", data);

export function* fetchUsers() {
  try {
    const { data } = yield call(fetchFromAPI);
    yield put(fetchUsersSuccess(data));
  } catch (error) {
    yield put(fetchUsersFailure(error));
  }
}

export function* onFetchUsersStart() {
  yield takeLatest(actionTypes.FETCH_USERS_START, fetchUsers);
}

export function* loginStart({ payload: { values, history } }) {
  try {
    const { data } = yield call(() => loginFromAPI(values));
    localStorage.setItem("user", data.token);
    yield put(loginSuccess(data));
    yield history.push("/");
    yield toast.success("You have logged in!");
  } catch (error) {
    yield put(loginFailure(error));
  }
}

export function* onLoginStart() {
  yield takeLatest(actionTypes.LOGIN_START, loginStart);
}

export function* userSagas() {
  yield all([call(onFetchUsersStart), call(onLoginStart)]);
}

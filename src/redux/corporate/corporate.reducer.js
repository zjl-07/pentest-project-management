import actionTypes from "./corporate.actionTypes";
import { deleteItem } from "./corporate.utils";
const INITIAL_STATE = {
  corporate: [],
  isFetching: false,
  errorMessage: undefined,
  corporate_id: {}
};

export default (state = INITIAL_STATE, action) => {
  switch (action.type) {
    case actionTypes.FETCH_CORPORATE_START:
    case actionTypes.FETCH_CORPORATE_BY_ID_START:
      return {
        ...state,
        isFetching: true
      };
    case actionTypes.FETCH_CORPORATE_SUCCESS:
      return {
        ...state,
        corporate: action.payload,
        isFetching: false
      };
    case actionTypes.FETCH_CORPORATE_FAILURE:
    case actionTypes.FETCH_CORPORATE_BY_ID_FAILURE:
    case actionTypes.ADD_CORPORATE_FAILURE:
    case actionTypes.DELETE_CORPORATE_FAILURE:
      return {
        ...state,
        errorMessage: action.payload,
        isFetching: false
      };
    case actionTypes.FETCH_CORPORATE_BY_ID_SUCCESS:
      return {
        ...state,
        corporate_id: action.payload,
        isFetching: false
      };
    case actionTypes.ADD_CORPORATE_SUCCESS:
      return {
        ...state,
        corporate: [...state.corporate, action.payload],
        isFetching: false
      };
    case actionTypes.UPDATE_CORPORATE_SUCCESS:
      const corporate = [...state.corporate];
      const { payload } = action;
      const index = corporate.findIndex(c => c.id === payload.id);
      corporate[index] = payload;

      return {
        ...state,
        corporate,
        isFetching: false
      };
    case actionTypes.DELETE_CORPORATE_START:
      return {
        ...state,
        corporate: deleteItem(state.corporate, action.payload),
        isFetching: false
      };
    default:
      return state;
  }
};

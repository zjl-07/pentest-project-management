import React, { useEffect } from "react";
import { connect } from "react-redux";
import { withRouter } from "react-router-dom";
import { createStructuredSelector } from "reselect";
import { selectProjectById } from "redux/project/project.selector";
import { selectVulnsByProjectId } from "redux/vuln/vuln.selector";
import { fetchProjectByIdStart } from "redux/project/project.action";
import { fetchVulnsByProjectIdStart } from "redux/vuln/vuln.action";
import ProjectDetails from "components/project-details/project-details";
import Button from "@material-ui/core/Button";
import EnhancedTable from "components/vuln-table/vuln-table";

const Vuln = ({
  project,
  vulns,
  fetchProjectById,
  fetchVulnsByProjectId,
  match,
  history
}) => {
  useEffect(() => {
    fetchProjectById(match.params.id);
  }, [fetchProjectById, match.params.id]);

  useEffect(() => {
    fetchVulnsByProjectId(match.params.id);
  }, [fetchVulnsByProjectId, match.params.id]);

  return (
    <div className="vuln">
      <ProjectDetails project={project} />
      {project.editable && (
        <Button
          size="large"
          variant="contained"
          color="primary"
          className="add-button-vuln"
          onClick={() => history.push(`/projects/${project._id}/vuln/add`)}
        >
          Add New Finding
        </Button>
      )}
      <EnhancedTable
        className="vuln-table"
        rows={vulns}
        editable={project.editable}
      />
    </div>
  );
};

const mapStateToProps = createStructuredSelector({
  project: selectProjectById,
  vulns: selectVulnsByProjectId
});

const mapDispatchToProps = dispatch => ({
  fetchProjectById: id => dispatch(fetchProjectByIdStart(id)),
  fetchVulnsByProjectId: id => dispatch(fetchVulnsByProjectIdStart(id))
});

export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Vuln));

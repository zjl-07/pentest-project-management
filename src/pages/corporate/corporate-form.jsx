import React, { Component } from "react";
import { createStructuredSelector } from "reselect";
import { withRouter } from "react-router-dom";
import { Form, Field } from "react-final-form";
import { connect } from "react-redux";
import { TextField } from "final-form-material-ui";
import { Paper, Grid, Button } from "@material-ui/core";
import {
  addCorporateStart,
  fetchCorporateByIdStart,
  updateCorporateStart
} from "redux/corporate/corporate.action";
import { selectCorporateById } from "redux/corporate/corporate.selector";

class CorporateForm extends Component {
  onSubmit = async values => {
    const { id } = this.props.match.params;
    const { history, addNewCorporate, updateCorporateById } = this.props;

    console.log("untuk arlen", values);

    if (!id) {
      addNewCorporate(values);
    } else {
      updateCorporateById(id, values);
    }

    history.goBack();
  };

  componentDidMount() {
    const { id } = this.props.match.params;
    const { fetchCorporateById } = this.props;

    if (id) {
      fetchCorporateById(id);
    }

    console.log(this.props);
  }

  render() {
    const { onSubmit } = this;
    const { history, corporate } = this.props;

    return (
      <div className="customed_form">
        <div className="center">
          <h2>Add/Edit Corporate</h2>
        </div>
        <Form
          onSubmit={onSubmit}
          initialValues={{ ...corporate, imageLink: "" }}
          render={({ handleSubmit, submitting, values }) => (
            <form onSubmit={handleSubmit} noValidate>
              <Paper className="customed_form-content">
                <Grid container alignItems="flex-start" spacing={2}>
                  <Grid item xs={6}>
                    <Field
                      fullWidth
                      required
                      name="name"
                      component={TextField}
                      type="text"
                      label="Company Name"
                      variant="outlined"
                    />
                  </Grid>
                  <Grid item xs={6}>
                    <Field
                      fullWidth
                      required
                      name="email"
                      component={TextField}
                      type="text"
                      label="Email"
                      variant="outlined"
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <Field
                      name="description"
                      component={TextField}
                      fullWidth
                      margin="normal"
                      label="Company Description"
                      variant="outlined"
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <Field
                      name="address"
                      component={TextField}
                      fullWidth
                      margin="normal"
                      label="Company Address"
                      variant="outlined"
                    />
                  </Grid>
                  <Grid item xs={6}>
                    <Field
                      name="personInCharge"
                      component={TextField}
                      fullWidth
                      margin="normal"
                      label="Person In Charge"
                      variant="outlined"
                    />
                  </Grid>
                  <Grid item xs={6}>
                    <Field
                      name="phoneNumber"
                      component={TextField}
                      fullWidth
                      margin="normal"
                      label="Phone Number"
                      variant="outlined"
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <Field
                      InputLabelProps={{
                        shrink: true
                      }}
                      name="imageLink"
                      component={TextField}
                      type="file"
                      fullWidth
                      margin="normal"
                      label="Upload Company Image"
                      variant="outlined"
                    />
                  </Grid>
                </Grid>
                <Grid
                  item
                  xs={12}
                  style={{
                    marginTop: 16,
                    display: "flex",
                    justifyContent: "flex-end"
                  }}
                >
                  <Button
                    id="default-size"
                    variant="contained"
                    color="default"
                    className="u-margin-right-small"
                    onClick={() => history.push("/")}
                  >
                    Cancel
                  </Button>

                  <Button
                    id="default-size"
                    variant="contained"
                    color="primary"
                    type="submit"
                    disabled={submitting}
                  >
                    Submit
                  </Button>
                </Grid>
              </Paper>
            </form>
          )}
        />
      </div>
    );
  }
}

const mapStateToProps = createStructuredSelector({
  corporate: selectCorporateById
});

const mapDispatchToProps = dispatch => ({
  addNewCorporate: values => dispatch(addCorporateStart(values)),
  fetchCorporateById: id => dispatch(fetchCorporateByIdStart(id)),
  updateCorporateById: (id, form) => dispatch(updateCorporateStart(id, form))
});

export default withRouter(
  connect(mapStateToProps, mapDispatchToProps)(CorporateForm)
);

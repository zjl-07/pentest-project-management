import React, { Component } from "react";
import { connect } from "react-redux";
import { withRouter } from "react-router-dom";
import { Form, Field } from "react-final-form";
import { createStructuredSelector } from "reselect";
import { selectAllCorporate } from "redux/corporate/corporate.selector";
import { TextField, Select } from "final-form-material-ui";
import { Paper, Grid, Button, MenuItem } from "@material-ui/core";
import { MuiPickersUtilsProvider } from "@material-ui/pickers";
import DateFnsUtils from "@date-io/date-fns";
import DatePickerWrapper from "components/date-picker/date-picker";
import { addProjectStart } from "redux/project/project.action";

class ProjectForm extends Component {
  onSubmit = async values => {
    this.props.addProject(values);
    this.props.history.goBack();
  };

  componentDidMount() {}
  render() {
    const { onSubmit } = this;
    const { history, corporate } = this.props;

    return (
      <div className="customed_form">
        {console.log(this.props)}
        <div className="center">
          <h2>Add/Edit Project</h2>
        </div>
        <Form
          onSubmit={onSubmit}
          initialValues={{ corporateName: corporate.name }}
          render={({ handleSubmit, submitting, values }) => (
            <form onSubmit={handleSubmit} noValidate>
              <Paper className="customed_form-content">
                <Grid container alignItems="flex-start" spacing={2}>
                  <Grid item xs={6}>
                    <Field
                      fullWidth
                      required
                      name="projectName"
                      component={TextField}
                      type="text"
                      label="Project Name"
                    />
                  </Grid>
                  <Grid item xs={6}>
                    <Field
                      required
                      name="corporateId"
                      component={Select}
                      type="text"
                      label="Company Name"
                      formControlProps={{ fullWidth: true }}
                    >
                      {corporate &&
                        corporate.map(corporate => (
                          <MenuItem
                            key={corporate.id}
                            id="default-size"
                            value={`${corporate.id}`}
                          >
                            {corporate.name}
                          </MenuItem>
                        ))}
                    </Field>
                  </Grid>
                  <Grid item xs={12}>
                    <Field
                      name="description"
                      component={TextField}
                      fullWidth
                      margin="normal"
                      label="Project Description"
                    />
                  </Grid>
                  <MuiPickersUtilsProvider utils={DateFnsUtils}>
                    <Grid item xs={6}>
                      <Field
                        name="startDate"
                        component={DatePickerWrapper}
                        fullWidth
                        margin="normal"
                        label="Start Date"
                      />
                    </Grid>
                    <Grid item xs={6}>
                      <Field
                        name="endDate"
                        component={DatePickerWrapper}
                        fullWidth
                        margin="normal"
                        label="End Date"
                      />
                    </Grid>
                  </MuiPickersUtilsProvider>
                  <Grid item xs={12}>
                    <Field
                      name="team"
                      component={TextField}
                      fullWidth
                      margin="normal"
                      label="Person In Charge"
                    />
                  </Grid>
                </Grid>

                <Grid
                  item
                  xs={12}
                  style={{
                    marginTop: 16,
                    display: "flex",
                    justifyContent: "flex-end"
                  }}
                >
                  <Button
                    id="default-size"
                    variant="contained"
                    color="default"
                    className="u-margin-right-small"
                    onClick={() => history.goBack()}
                  >
                    Cancel
                  </Button>

                  <Button
                    id="default-size"
                    variant="contained"
                    color="primary"
                    type="submit"
                    disabled={submitting}
                  >
                    Submit
                  </Button>
                </Grid>
              </Paper>
            </form>
          )}
        />
      </div>
    );
  }
}

const mapStateToProps = createStructuredSelector({
  corporate: selectAllCorporate
});

const mapDispatchToProps = dispatch => ({
  addProject: form => dispatch(addProjectStart(form))
});
export default withRouter(
  connect(mapStateToProps, mapDispatchToProps)(ProjectForm)
);

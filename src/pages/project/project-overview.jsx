import React, { Component } from "react";
import { connect } from "react-redux";
import { withRouter } from "react-router-dom";
import { createStructuredSelector } from "reselect";
import { selectProjectByCorporateId } from "redux/project/project.selector";
import { fetchProjectByCorporateIdStart } from "redux/project/project.action";
import Typography from "@material-ui/core/Typography";
import Button from "@material-ui/core/Button";
import ProjectItem from "components/project-item/project-item";

class ProjectOverview extends Component {
  componentDidMount() {
    const { match, fetchCorporateById } = this.props;
    fetchCorporateById(match.params.id);
  }

  render() {
    const { corporate, history, match } = this.props;
    return (
      <div className="project-overview">
        {corporate && (
          <div className="space_between">
            <Typography variant="h3" component="h2">
              {corporate.name}
            </Typography>
            <div>
              <Button
                variant="contained"
                size="large"
                color="default"
                id="default-size"
                className="u-margin-right-small"
                onClick={() => history.goBack()}
              >
                Back
              </Button>
              <Button
                variant="contained"
                size="large"
                color="primary"
                id="default-size"
                onClick={() => history.push(`${match.url}/add`)}
              >
                Add New Project
              </Button>
            </div>
          </div>
        )}
        <div className="card-layout u-margin-top-small">
          {corporate &&
            corporate.map(({ id, ...rest }) => (
              <ProjectItem key={id} {...rest} id={id} />
            ))}
        </div>
      </div>
    );
  }
}

const mapStateToProps = createStructuredSelector({
  corporate: selectProjectByCorporateId
});

const mapDispatchToProps = dispatch => ({
  fetchCorporateById: id => dispatch(fetchProjectByCorporateIdStart(id))
});

export default withRouter(
  connect(mapStateToProps, mapDispatchToProps)(ProjectOverview)
);

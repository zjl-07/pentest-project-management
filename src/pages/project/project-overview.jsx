import React, { useEffect } from "react";
import { connect } from "react-redux";
import { withRouter } from "react-router-dom";
import { createStructuredSelector } from "reselect";
import { selectProjectByCorporateId } from "redux/project/project.selector";
import { fetchProjectByCorporateIdStart } from "redux/project/project.action";
import Typography from "@material-ui/core/Typography";
import Button from "@material-ui/core/Button";
import ProjectItem from "components/project-item/project-item";

const ProjectOverview = ({ match, fetchProjectById, project, history }) => {
  const {
    user: { role }
  } = JSON.parse(localStorage.getItem("currentUser"));

  useEffect(() => {
    fetchProjectById(match.params.id);
  }, [fetchProjectById, match.params.id]);

  return (
    <div className="project-overview">
      {project && (
        <div className="space_between">
          <Typography variant="h3" component="h2">
            {project.name}
          </Typography>
          <div>
            <Button
              variant="contained"
              size="large"
              color="default"
              className="u-margin-right-small medium-size"
              onClick={() => history.goBack()}
            >
              Back
            </Button>
            {role !== "user" && (
              <Button
                variant="contained"
                size="large"
                color="primary"
                className="medium-size"
                onClick={() => history.push(`${match.url}/add`)}
              >
                Add New Project
              </Button>
            )}
          </div>
        </div>
      )}
      <div className="card-layout u-margin-top-small">
        {project &&
          project.map(({ _id, ...rest }) => (
            <ProjectItem key={_id} {...rest} id={_id} />
          ))}
      </div>
    </div>
  );
};

const mapStateToProps = createStructuredSelector({
  project: selectProjectByCorporateId
});

const mapDispatchToProps = dispatch => ({
  fetchProjectById: id => dispatch(fetchProjectByCorporateIdStart(id))
});

export default withRouter(
  connect(mapStateToProps, mapDispatchToProps)(ProjectOverview)
);

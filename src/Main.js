import React, { useState, useEffect, Suspense, lazy } from "react";
import { Switch } from "react-router-dom";
import { connect } from "react-redux";
import { fetchCorporateStart } from "redux/corporate/corporate.action";
import { fetchProjectsStart } from "redux/project/project.action";
import { fetchUsersStart } from "redux/user/user.action";
import Header from "components/header/header";
import Sidebar from "components/sidebar/sidebar";
import Spinner from "components/spinner/spinner";
import ProtectedRoute from "components/protected-route/protected-route";

const Corporate = lazy(() => import("pages/corporate/corporate"));
const CorporateForm = lazy(() => import("pages/corporate/corporate-form"));
const AllProject = lazy(() => import("pages/project/project"));
const ProjectOverview = lazy(() => import("pages/project/project-overview"));
const ProjectForm = lazy(() => import("pages/project/project-form"));
const Vuln = lazy(() => import("pages/vuln/vulns"));
const VulnForm = lazy(() => import("pages/vuln/vuln-form"));

const Main = ({ fetchCorporate, fetchProjects, fetchUsers }) => {
  const [openSidebar, setSidebarStatus] = useState(false);

  const onToggleSideBar = () => {
    setSidebarStatus(!openSidebar);
  };

  useEffect(() => {
    fetchCorporate();
  }, [fetchCorporate]);

  useEffect(() => {
    fetchProjects();
  }, [fetchProjects]);

  useEffect(() => {
    fetchUsers();
  }, [fetchUsers]);
  return (
    <div>
      <Sidebar isActive={openSidebar && "active"} />
      <Header onToggleSideBar={() => onToggleSideBar()} />
      <div className={`main-content ${openSidebar && "active"}`}>
        <Switch>
          <Suspense fallback={<Spinner />}>
            <ProtectedRoute exact path="/" component={Corporate} />
            <ProtectedRoute
              exact
              path="/corporate/add"
              component={CorporateForm}
            />
            <ProtectedRoute
              exact
              path="/corporate/:id/edit"
              component={CorporateForm}
            />
            <ProtectedRoute exact path="/all-project" component={AllProject} />
            <ProtectedRoute
              exact
              path="/corporate/:id/projects"
              component={ProjectOverview}
            />
            <ProtectedRoute exact path="/projects/:id" component={Vuln} />
            <ProtectedRoute
              exact
              path="/projects/:id/vuln/:vulnId/edit"
              component={VulnForm}
            />
            <ProtectedRoute
              exact
              path="/projects/:id/vuln/add"
              component={VulnForm}
            />
            <ProtectedRoute
              exact
              path="/corporate/:id/projects/add"
              component={ProjectForm}
            />
            <ProtectedRoute
              exact
              path="/corporate/:id/projects/:projectId/edit"
              component={ProjectForm}
            />
          </Suspense>
        </Switch>
      </div>
    </div>
  );
};

const mapDispatchToProps = dispatch => ({
  fetchCorporate: () => dispatch(fetchCorporateStart()),
  fetchProjects: () => dispatch(fetchProjectsStart()),
  fetchUsers: () => dispatch(fetchUsersStart())
});

export default connect(null, mapDispatchToProps)(Main);

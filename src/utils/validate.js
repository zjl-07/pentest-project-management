export const required = value => (value ? undefined : "*Required");

export const number = value =>
  value && isNaN(Number(value)) ? "Must be a number" : undefined;

export const email = value =>
  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value)
    ? "Invalid email address"
    : undefined;

export const minLength = min => value =>
  value && value.length < min
    ? `Must be at least ${min} characters or more`
    : undefined;

export const maxLength = max => value =>
  value && value.length > max ? `Must be ${max} characters or less` : undefined;

export const corporateValidation = values => {
  const errors = {};
  const att = [
    "name",
    "email",
    "description",
    "address",
    "personInCharge",
    "phoneNumber"
  ];

  att.forEach(att => {
    errors[att] = required(values[att]);
  });

  errors["email"] = errors["email"] || email(values["email"]);
  errors["phoneNumber"] =
    errors["phoneNumber"] || number(values["phoneNumber"]);

  return errors;
};

export const projectValidation = values => {
  const errors = {};
  const att = [
    "name",
    "description",
    "startDate",
    "endDate",
    "reportStartDate",
    "reportEndDate"
  ];

  att.forEach(att => {
    errors[att] = required(values[att]);
  });

  return errors;
};

export const vulnValidation = values => {
  const errors = {};
  const att = ["name", "description", "location", "desc"];

  att.forEach(att => {
    errors[att] = required(values[att]);
  });

  return errors;
};

export const loginValidation = values => {
  const errors = {};

  errors["email"] = required(values["email"]) || email(values["email"]);
  errors["password"] =
    required(values["password"]) || minLength(8)(values["password"]);

  return errors;
};

export const registerValidation = values => {
  const errors = {};

  errors["name"] = required(values["name"]);
  errors["role"] = required(values["role"]);
  errors["email"] = required(values["email"]) || email(values["email"]);
  errors["password"] =
    required(values["password"]) || minLength(8)(values["password"]);

  return errors;
};
